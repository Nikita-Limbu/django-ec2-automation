name: Django EC2 Auto Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Create SSH Key File
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: Terraform Init and Apply
        run: |
          cd infra
          terraform init
          terraform apply -auto-approve

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          EC2_IP=$(cd infra && terraform output -raw public_ip)
          if [[ -z "$EC2_IP" ]]; then
            echo "Error: No public IP found. Terraform may have failed."
            exit 1
          fi
          echo "EC2_IP=$EC2_IP" >> $GITHUB_ENV

      - name: Wait for EC2 SSH to be available
        run: |
          echo "Waiting for EC2 to be ready on SSH (port 22)..."
          for i in {1..10}; do
            nc -zv $EC2_IP 22 && echo "SSH is ready!" && break
            echo "Attempt $i: SSH not available yet. Retrying in 10s..."
            sleep 10
          done

      - name: Upload and Run Deployment Script on EC2
        run: |
          for i in {1..3}; do
            echo "Uploading deploy.sh..."
            scp -o StrictHostKeyChecking=no -i ec2-key.pem ./scripts/deploy.sh ubuntu@$EC2_IP:/home/ubuntu/deploy.sh

            echo "Executing deploy.sh on EC2..."
            ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=30 -o ServerAliveCountMax=5 -i ec2-key.pem ubuntu@$EC2_IP "
              chmod +x /home/ubuntu/deploy.sh
              bash /home/ubuntu/deploy.sh
            "

            if [ $? -eq 0 ]; then
              echo "Deployment script executed successfully!"
              break
            else
              echo "Retry $i failed... Retrying in 10 seconds"
              sleep 10
            fi
          done